{"version":3,"sources":["contexts/PostsContext.jsx","components/Postbook/LoadingSpinner.jsx","hooks/usePostData.js","components/Postbook/PostForm/PostForm.jsx","components/Postbook/PostForm/EditPost.jsx","components/Postbook/PostForm/NewPost.jsx","components/Postbook/PostDate.jsx","components/Postbook/PostItem.jsx","components/Postbook/PostList.jsx","components/Postbook/Button.jsx","components/Postbook/ViewPost.jsx","hooks/useDeleteFetch.js","components/Postbook/Postbook.jsx","components/Menu/Menu.jsx","components/Menu/Page.jsx","contexts/PostsProvider.jsx","hooks/useJsonFetch.js","App.jsx","index.js"],"names":["PostsContext","createContext","posts","error","loading","LoadingSpinner","radius","width","color","length","className","viewBox","cx","cy","r","fill","strokeWidth","stroke","usePostData","url","useState","data","setData","setLoading","setError","postData","body","a","fetch","method","JSON","stringify","PostForm","onFormSubmit","submitBtnText","initialFormData","id","content","formData","setFormData","onSubmit","e","preventDefault","trim","useEffect","onInputChange","name","value","prev","placeholder","onClick","FormTextarea","onChange","target","EditPost","match","params","history","useHistory","useContext","getPostById","reloadPosts","process","created","post","setPost","push","NewPost","PostDate","date","formattedDate","Date","toLocaleDateString","PostItem","PostList","map","key","Button","children","type","ViewPost","deletePost","requestDelete","useDeleteFetch","onDelete","action","Postbook","path","component","Menu","text","to","exact","MenuLink","props","activeClassName","HomePage","DriftPage","ForzaPage","TimeAttackPage","PostsProvider","opts","sendRequest","response","json","resendRequest","useJsonFetch","Provider","activePost","find","filter","App","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a8db2f4.chunk.js","sourcesContent":["import { createContext } from 'react';\nexport const PostsContext = createContext({\n  posts: [],\n  error: null,\n  loading: false,\n});\n","export const LoadingSpinner = ({ radius, width, color }) => {\n  // radius и width работают совсем не так, как мне нужно было, но оставлю так\n  const length = radius * 2.5;\n\n  return (\n    <svg className=\"loading-spinner\" viewBox={`0 0 ${length} ${length}`}>\n      <circle\n        className=\"path\"\n        cx={length / 2}\n        cy={length / 2}\n        r={radius}\n        fill=\"none\"\n        strokeWidth={width}\n        stroke={color}\n      ></circle>\n    </svg>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePostData = (url) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const postData = async (body) => {\n    setLoading(true);\n    try {\n      const data = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(body),\n      });\n      setData(data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, postData };\n};\n","import { useEffect, useState } from 'react';\n\nexport const PostForm = ({ data, onFormSubmit, submitBtnText }) => {\n  const initialFormData = { id: 0, content: '' };\n  const [formData, setFormData] = useState(initialFormData);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.content.trim()) {\n      return;\n    }\n    onFormSubmit(formData);\n    setFormData(initialFormData);\n  };\n\n  const onInputChange = (name, value) => {\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  useEffect(() => {\n    if (data) {\n      setFormData(data);\n    }\n  }, [data]);\n\n  return (\n    <form className=\"form\" onSubmit={onSubmit}>\n      <FormTextarea\n        onInputChange={onInputChange}\n        value={formData.content}\n        name=\"content\"\n        placeholder=\"Написать какой-нибудь глубокомысленный пост...\"\n      />\n      <button className=\"submit\" onClick={onSubmit}>\n        {submitBtnText}\n      </button>\n    </form>\n  );\n};\n\nconst FormTextarea = ({ name, onInputChange, value, placeholder }) => {\n  const onChange = ({ target: { value } }) => {\n    onInputChange(name, value);\n  };\n\n  return (\n    <textarea\n      className=\"form_textarea\"\n      name={name}\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n    />\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PostsContext } from '../../../contexts/PostsContext';\nimport { usePostData } from '../../../hooks/usePostData';\nimport { PostForm } from './PostForm';\n\nexport const EditPost = ({\n  match: {\n    params: { id },\n  },\n}) => {\n  const history = useHistory();\n  const { posts, loading, error, getPostById, reloadPosts } =\n    useContext(PostsContext);\n  const { postData } = usePostData(`${process.env.REACT_APP_BASE_URL}/posts`);\n\n  const [post, setPost] = useState({ id: 0, created: '', content: '' });\n\n  const onFormSubmit = async (data) => {\n    await postData(data);\n    history.push(`/posts/${id}`);\n    reloadPosts();\n  };\n\n  const onBack = () => {\n    history.push(`/posts/${id}`);\n  };\n\n  useEffect(() => {\n    const post = getPostById(id);\n    setPost({ ...post });\n  }, [posts]);\n\n  return loading ? (\n    'Loading...'\n  ) : error ? (\n    'Error('\n  ) : (\n    <div className=\"edit-post\">\n      <button className=\"back-btn\" onClick={onBack}>\n        ←\n      </button>\n      <PostForm\n        data={post}\n        onFormSubmit={onFormSubmit}\n        submitBtnText=\"Отправить\"\n      />\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { PostsContext } from '../../../contexts/PostsContext';\nimport { usePostData } from '../../../hooks/usePostData';\nimport { PostForm } from './PostForm';\n\nexport const NewPost = () => {\n  const history = useHistory();\n  const { reloadPosts } = useContext(PostsContext);\n  const { data, loading, error, postData } = usePostData(\n    `${process.env.REACT_APP_BASE_URL}/posts`,\n  );\n\n  const onFormSubmit = async (data) => {\n    await postData(data);\n    history.push(`/posts`);\n    reloadPosts();\n  };\n\n  return loading ? (\n    'Loading...'\n  ) : (\n    <div className=\"add-new-post\">\n      <PostForm onFormSubmit={onFormSubmit} submitBtnText=\"Отправить\" />\n    </div>\n  );\n};\n","export const PostDate = ({ date }) => {\n  const formattedDate = new Date(date).toLocaleDateString('ru-RU');\n\n  return <div className=\"post_date\">{formattedDate}</div>;\n};\n","import { useHistory } from 'react-router';\nimport { PostDate } from './PostDate';\n\nexport const PostItem = ({ id, content, created }) => {\n  const history = useHistory();\n\n  const onClick = () => {\n    history.push(`/posts/${id}`);\n  };\n\n  return (\n    <div className=\"post_container\" onClick={onClick}>\n      <header className=\"post_header\">\n        <h3 className=\"post_author\">Курочка Петухова</h3>\n        <PostDate date={created} />\n      </header>\n      <div className=\"post_content\">{content}</div>\n    </div>\n  );\n};\n","import { PostItem } from './PostItem';\n\nexport const PostList = ({ posts }) => {\n  return (\n    <ul className=\"post_list\">\n      {posts.map((post) => (\n        <PostItem {...post} key={post.id} />\n      ))}\n    </ul>\n  );\n};\n","export const Button = ({ children, onClick }) => {\n  return (\n    <button className=\"post_controls_btn\" type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { PostsContext } from '../../contexts/PostsContext';\nimport { useDeleteFetch } from '../../hooks/useDeleteFetch';\n\nimport { Button } from './Button';\nimport { PostDate } from './PostDate';\n\nexport const ViewPost = ({\n  match: {\n    params: { id },\n  },\n}) => {\n  const history = useHistory();\n  const { posts, getPostById, loading, error, deletePost, reloadPosts } =\n    useContext(PostsContext);\n  const { requestDelete } = useDeleteFetch(\n    `${process.env.REACT_APP_BASE_URL}/posts/${id}`,\n  );\n\n  const [post, setPost] = useState({ id: 0, created: '', content: '' });\n\n  const onEdit = () => {\n    history.push(`/posts/${id}/edit`);\n  };\n\n  const onDelete = async () => {\n    try {\n      await requestDelete(id);\n      history.push('/posts');\n      reloadPosts();\n    } catch {}\n  };\n\n  const onBack = () => {\n    history.push('/posts');\n  };\n\n  useEffect(() => {\n    const post = getPostById(id);\n    setPost({ ...post });\n  }, [posts]);\n\n  return loading ? (\n    'Loading...'\n  ) : error ? (\n    'Error('\n  ) : (\n    <div className=\"post-view\">\n      <button className=\"back-btn\" onClick={onBack}>\n        ←\n      </button>\n      <div className=\"post_container\">\n        <header className=\"post_header\">\n          <h3 className=\"post_author\">Курочка Петухова</h3>\n          <PostDate date={post.created} />\n        </header>\n        <div className=\"post_content\">{post.content}</div>\n        <div className=\"post_controls\">\n          <Button action=\"edit\" id={id} onClick={onEdit}>\n            Изменить\n          </Button>\n          <Button action=\"delete\" id={id} onClick={onDelete}>\n            Удалить\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const useDeleteFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const requestDelete = async () => {\n    setLoading(true);\n    try {\n      const data = await fetch(url, {\n        method: 'DELETE',\n      });\n      setData(data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, requestDelete };\n};\n","import { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { PostsContext } from '../../contexts/PostsContext';\nimport { LoadingSpinner } from './LoadingSpinner';\n\nimport { EditPost } from './PostForm/EditPost';\nimport { NewPost } from './PostForm/NewPost';\nimport { PostList } from './PostList';\nimport { ViewPost } from './ViewPost';\n\nexport const Postbook = ({ match: { url } }) => {\n  const history = useHistory();\n  const { posts, loading } = useContext(PostsContext);\n\n  const onAddBtnClick = () => {\n    history.push('/posts/new');\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path={`${url}/new`} component={NewPost} />\n        <Route path={`${url}/:id/edit`} component={EditPost} />\n        <Route path={`${url}/:id`} component={ViewPost} />\n        <Route path={url}>\n          <div className=\"postbook_container\">\n            {loading ? (\n              <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\n            ) : (\n              <>\n                <button className=\"add-post-btn\" onClick={onAddBtnClick}>\n                  Добавить новый пост\n                </button>\n                <PostList posts={posts} />\n              </>\n            )}\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Menu = () => (\n  <nav className=\"menu\">\n    <MenuLink text=\"Главная\" to=\"/\" exact />\n    <MenuLink text=\"Дрифт-такси\" to=\"/drift\" />\n    <MenuLink text=\"Time Attack\" to=\"/timeattack\" />\n    <MenuLink text=\"Forza Karting\" to=\"/forza\" />\n  </nav>\n);\n\nconst MenuLink = ({ text, ...props }) => (\n  <NavLink\n    activeClassName=\"menu__item-active\"\n    className=\"menu__item\"\n    {...props}\n  >\n    {text}\n  </NavLink>\n);\n","export const HomePage = () => {\n  return (\n    <article className=\"article\">\n      <h1 className=\"article__title\">Гоночн​ое такси</h1>\n      <p className=\"article__paragraph\">\n        Гоночн​ое такси – отличная возможность насладиться скоростью и\n        мастерством гонщика, сидя на месте штурмана, и стать свидетелем\n        настоящего мастерства профессиональных инструкторов Сочи Автодрома, в\n        полной мере ощутив крутые виражи на самой современной гоночной трассе\n        России.\n      </p>\n    </article>\n  );\n};\n\nexport const DriftPage = () => {\n  return (\n    <article className=\"article\">\n      <h1 className=\"article__title\">Дрифт-такси</h1>\n      <p className=\"article__paragraph\">\n        Только ​на Сочи Автодроме вас ждет уникальная возможность промчаться по\n        трассе Формулы 1 на максимально возможной скорости в управляемом заносе\n        на легендарной «королеве дрифта» Nissan Silvia!\n      </p>\n      <p className=\"article__paragraph\">\n        Прокатитесь на дрифт-такси с вице-чемпионом Межконтинентального кубка по\n        дрифту под эгидой FIA 2017 года Аркадием Цареградцевым и испытайте на\n        себе, что значат скоростные постановки и эффектные заносы!\n      </p>\n    </article>\n  );\n};\n\nexport const ForzaPage = () => {\n  return (\n    <article className=\"article\">\n      <h1 className=\"article__title\">Forza Karting Sochi</h1>\n      <p className=\"article__paragraph\">\n        В Олимпийском парке работает новый открытый развлекательный картинг\n        центр мирового уровня!\n      </p>\n      <p className=\"article__paragraph\">\n        Вас ждут большая, широкая, безопасная трасса и супер современные карты\n        европейского производства c двигателями мощностью 13 л.с. Трасса длинной\n        более 500 метров оборудована системой хронометража, фиксирующей данные\n        заезда в режиме реального времени. По окончании заезда каждый пилот\n        получает распечатку со своими результатами.\n      </p>\n    </article>\n  );\n};\n\nexport const TimeAttackPage = () => {\n  return (\n    <article className=\"article\">\n      <h1 className=\"article__title\">Гонка ​​​​​​Time Attack</h1>\n      <p className=\"article__paragraph\">\n        Гонка Time Attack создана для тех, кто любит ставить рекорды – открытое\n        соревнование на гражданских автомобилях не предполагает контактной\n        борьбы пилотов во время заезда, но позволит в полной мере ощутить\n        скорость, найти идеальную траекторию и реализовать весь потенциал своего\n        автомобиля. Каждый участник проезжает по Сочи Автодрому определённое\n        количество кругов, а в зачёт идёт только лучшее время одного круга из\n        всех заездов. Для того, чтобы попробовать свои силы на лучшей гоночной\n        трассе страны, Вам понадобится исправный легковой автомобиль на летних\n        шинах и шлем.\n      </p>\n    </article>\n  );\n};\n","import { useJsonFetch } from '../hooks/useJsonFetch';\nimport { PostsContext } from './PostsContext';\n\nexport default function PostsProvider(props) {\n  const activePost = null;\n\n  let {\n    data: posts,\n    loading,\n    error,\n    resendRequest: reloadPosts,\n  } = useJsonFetch(`${process.env.REACT_APP_BASE_URL}/posts`);\n\n  const getPostById = (id) => {\n    return posts.find((post) => post.id == id);\n  };\n\n  const deletePost = (id) => {\n    posts = posts.filter((post) => post.id !== id);\n  };\n\n  return (\n    <PostsContext.Provider\n      value={{\n        posts,\n        activePost,\n        loading,\n        getPostById,\n        deletePost,\n        reloadPosts,\n      }}\n    >\n      {props.children}\n    </PostsContext.Provider>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport const useJsonFetch = (url, opts) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url, opts);\n      const data = await response.json();\n      setData(data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    sendRequest(url, opts);\n  }, []);\n\n  return { data, loading, error, resendRequest: sendRequest };\n};\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Postbook } from './components/Postbook/Postbook';\nimport { Menu } from './components/Menu/Menu';\nimport {\n  HomePage,\n  DriftPage,\n  TimeAttackPage,\n  ForzaPage,\n} from './components/Menu/Page';\n\nimport PostsProvider from './contexts/PostsProvider';\n\nimport './styles/app.css';\n\nexport const App = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route\n            path=\"/posts\"\n            render={(props) => (\n              // поскольку PostsProvider нужен только для Postbook (а я всё делаю в одном репозитории), он находится тут\n              <PostsProvider>\n                <Postbook {...props} />\n              </PostsProvider>\n            )}\n          />\n\n          {/* Route без атрибута path, т. к. здесь 4 разных варианта, перед всеми нужен компонент Menu */}\n          <Route>\n            <Menu />\n            <div className=\"page\">\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/drift\" component={DriftPage} />\n              <Route path=\"/timeattack\" component={TimeAttackPage} />\n              <Route path=\"/forza\" component={ForzaPage} />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}